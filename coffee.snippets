# Class
snippet class
  class ${1:name}
    constructor: (${2:params...}) ->
      ${3://body...}

# Funcion
snippet fun
  ${1:function_name} = (${2:argumen}) ->
    ${3: //body...}

# Asignation if
snippet =if
  ${1:variable} = ${2:valor} if ${3:condition}

# Asignation if and
snippet ifand
  if ${1} and ${2}

# Asignation if then else
snippet =ifthen
  ${1: value} = if ${2:option} then ${3:asignation} else ${4:else}

# Asignation or=
snippet or=
  ${1:options} or= ${2:defaults}

# Asignation forin
snippet forin
  ${1:countdown} = (${2:num} for ${3:num} in ${4:[10..1]})

# Asignation forof
snippet forof
  ${1:ages} = for ${2:key}, ${3:value} of ${4:yearsOld}
    key + " is " + value

# Asignation while
snippet while
  ${1:action()} while ${2:condition}

# Asignation until
snippet until
  ${1:action()} until ${2:condition}

# Asignation forindo
snippet forindo
  for ${1:filename} in ${2:list}
    do (${3:filename}) ->

# Asignation try
snippet try
  try
    ${1:expresion}
  catch error
    ${2:error}

# Asignation tryfin
snippet tryfin
  try
    ${1:expresion}
  catch error
    ${2:error}
  finally
    ${3:cleanAll()}

# Asignation ?=
snippet ?=
  ${1:speed} ?= ${2:75}

# Asignation =?
snippet =?
  ${1:footprints} = ${2:yetis} ? ${3:bear}

# Asignation switch
snippet switch
  switch ${1:day}
    when ${2:Mon} then ${3:go work}
    else ${4:go relax}

# Block comment
snippet ###
  ###
   * ${1:comment}
   ###


## Spine.js CoffeeScript snippets ##

## model
snippet model
  ###
   * ${4}
   ###
  define (require, exports, module)->
    Spine = require 'spine'


    class ${1:classname} extends Spine.Model

      @configure '${2:$1}',
        ${3:'attribute'}

      @logPrefix: "(#{ @className } Model)"


      ###
       * Model validation.
       *
       * @see http://spinejs.com/api/models
       ###
      validate: ->
        return


      ###
       * Bind global record events for debug logging.
       *
       * This can be disabled by either setting `Spine.Model.trace = false` before creating models, or by setting `Model.trace = false` on existing models.
       ###
      $1.bind 'refresh', -> @log 'refreshed:', arguments
      $1.bind 'create', -> @log 'created: ', arguments
      $1.bind 'update', -> @log 'updated: ', arguments
      $1.bind 'error', -> @log 'error: ', arguments
      $1.bind 'destroy', -> @log 'destroyed: ', arguments

      module.exports = $1


## Require.js CoffeeScript snippets ##

## Simplified CommonJS wrapper
snippet amd
  ###
   * ${1:description}
   ###

  define (require)->
    ${2:Module} = require '${3:module-name}'

snippet require
  ${1:Module} = require '${2:module-name}'
